generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model most_buy_orders {
  id             Int     @id @unique(map: "id") @default(autoincrement())
  rank           String? @db.VarChar(1000)
  address        String? @db.VarChar(1000)
  token_cache token_cache[]
}

model most_sell_orders {
  id             Int     @id @unique(map: "id") @default(autoincrement())
  rank           String? @db.VarChar(1000)
  address        String? @db.VarChar(1000)
  token_cache token_cache[]
}

model notifications {
  notification_id Int       @id @unique(map: "notification_id") @default(autoincrement())
  text            String?   @db.Text
  date            DateTime? @db.Date
  user_id         Int

  @@index([user_id], map: "fk_user_id_idx")
}

model orders {
  order_id     Int                @id @unique(map: "order_id") @default(autoincrement())
  pair_address String?            @db.VarChar(1000)
  status       String?            @db.VarChar(100)
  token_price  Int?
  single_price Int?
  from_price   Int?
  to_price     Int?
  budget       Int?
  order_type   orders_order_type?
  price_type   orders_price_type?
  user_id      Int

  @@index([user_id], map: "fk_user_id_idx")
}

model token_cache {
  token_cache_id Int       @id @unique(map: "token_cache_id") @default(autoincrement())
  name           String?   @db.VarChar(1000)
  chain          String?   @db.VarChar(1000)
  address        String?   @db.VarChar(1000)
  price          Int?
  hr_change      Int?      @map("24hr_change")
  volume         Int?
  market_cap     Int?
  last_updated   DateTime? @db.Date
  top_gainers_id Int @unique
  top_movers_id Int @unique
  most_buy_orders_id Int @unique
  most_sell_orders_id Int @unique

  top_gainers top_gainers @relation(fields: [top_gainers_id], references: [id])
  top_movers top_movers @relation(fields: [top_movers_id], references: [id])
  most_buy_orders most_buy_orders @relation(fields: [most_buy_orders_id], references: [id])
  most_sell_orders most_sell_orders @relation(fields: [most_sell_orders_id], references: [id])

  @@index([top_gainers_id], map: "fk_top_gainers_id")
  @@index([top_movers_id], map: "fk_top_movers_id")
  @@index([most_buy_orders_id], map: "fk_most_buy_orders_id")
  @@index([most_sell_orders_id], map: "fk_most_sell_orders_id")
}

model top_gainers {
  id             Int     @id @unique(map: "id") @default(autoincrement())
  rank           String? @db.VarChar(1000)
  address        String? @db.VarChar(1000)
  token_cache token_cache[]

}

model top_movers {
  id             Int     @id @unique(map: "id") @default(autoincrement())
  rank           String? @db.VarChar(1000)
  address        String? @db.VarChar(1000)
  token_cache token_cache[]
}

model users {
  user_id  Int    @id @unique(map: "user_id") @default(autoincrement())
  username String @unique(map: "username") @db.VarChar(50)
  email    String @unique(map: "email") @db.VarChar(50)
  password String @db.VarChar(1000)
}

enum orders_order_type {
  buy
  sell
}

enum orders_price_type {
  range
  single
}
